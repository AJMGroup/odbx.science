worker_processes 1;
user nobody nogroup;
# 'user nobody nobody;' for systems with 'nobody' as a group instead

pid /var/run/nginx.pid;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
  sendfile on;
  include mime.types;

  upstream gunicorn {
    server unix:/tmp/gunicorn.sock fail_timeout=0;
  }
  
  upstream gunicorn_rest {
    server unix:/tmp/gunicorn_rest.sock fail_timeout=0;
  }

  server {
    listen 80;
    server_name _;

    location /.well-known/acme-challenge {
        allow all;
        root /var/www/certbot;
    }

    return 301 https://$host$request_uri;

  }
  
  server {
    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/www.odbx.science/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.odbx.science/privkey.pem;
    # copy of https://github.com/certbox/certbot/blob/master/certbox-nginx/certbox_nginx/_internal/tls_config/options-ssl-nginx.conf
    ssl_session_cache shared:le_nginx_SSL:10m;
    ssl_session_timeout 1440m;
    ssl_session_tickets off;
    
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

    # set the correct host(s) for your site
    server_name odbx.science www.odbx.science;

    keepalive_timeout 60;

    # path for static files
    root /app/static;

    # independently proxy css/js files to get the correct mime type
    location /css {
        include mime.types;
        add_header Content-Type text/css;
    }

    location /js {
        include mime.types;
        add_header Content-Type application/javascript;
    }
    
    location /favicon.ico {
        include mime.types;
        add_header Content-Type image/x-icon;
    }

    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://gunicorn;
    }

    #error_page 500 502 503 504 /500.html;
    #location = /500.html {
      #root /path/to/app/current/public;
    #}
  }

  server {
    listen 443 ssl;                                                
    ssl_certificate /etc/letsencrypt/live/www.odbx.science/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.odbx.science/privkey.pem;
    # copy of https://github.com/certbox/certbot/blob/master/certbox-nginx/certbox_nginx/_internal/tls_config/options-ssl-nginx.conf
    ssl_session_cache shared:le_nginx_SSL:10m;
    ssl_session_timeout 1440m;
    ssl_session_tickets off;
    
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

    # set the correct host(s) for your site
    server_name optimade.odbx.science;

    keepalive_timeout 60;

    # path for static files
    root /app/static;

    location /favicon.ico {
        include mime.types;
        add_header Content-Type image/x-icon;
    }

    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://gunicorn_rest;
    }
  }
}
